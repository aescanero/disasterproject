---
- name: Create dashboard
  when: master_name is defined and master_name.stdout == inventory_hostname
  shell: "{{ item }}"
  with_items:
    - 'kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-beta3/aio/deploy/recommended.yaml'

- name: Wait to raise dashboard
  shell: kubectl get pods -n kube-system |grep kubernetes-dashboard|grep Running
  register: test
  retries: 25
  delay: 10
  until: test.stdout != ""

- name: Modify external LoadBalacer
  when: addons_item.publish is defined and "external" in addons_item.publish
  include_role:
    name: services
    tasks_from: external
  vars:
    service: dashboard
    externalport: 80
    internalport: 4654
    protocol: "TCP"
    namespace: "kube-system"
    label: "k8s-app"

- name: Modify ingress route
  when: addons_item.publish is defined and "route" in addons_item.publish
  include_role:
    name: ingress
    tasks_from: ingress_add_route
  vars:
    service: kubernetes-dashboard
    route: "/"
    internalport: 443
    namespace: "kube-system"

- name: Obtain kube-system IP
  when: addons_item.publish is defined and "external" in addons_item.publish
  shell: kubectl get service -n kube-system dashboard -o jsonpath='{.status.loadBalancer.ingress[].ip}'
  register: dashboard_ip

- name: Obtain kube-system Token
  when: master_name is defined and master_name.stdout == inventory_hostname
  shell: kubectl get secret `kubectl get secret|grep ^dashboard|awk '{print $1}'` -o jsonpath="{.data.token}"|base64 -d
  register: dashboard_token

- name: HOW TO ACCESS TO DASHBOARD
  when: addons_item.publish is defined and "external" in addons_item.publish
  debug:
    msg: |
      Things left to do:
        - Access to https://{{dashboard_ip.stdout}}
        - Use the next token to access dashboard: {{dashboard_token.stdout}}

- name: HOW TO ACCESS TO DASHBOARD
  when: addons_item.publish is defined and "route" in addons_item.publish
  debug:
    msg: |
      Things left to do:
        - Access to https://dashboard.{{ domain }}
        - Use the next token to access dashboard: {{dashboard_token.stdout}}
...
