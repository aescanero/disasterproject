---
- name: Define PowerDNS
  run_once: true
  vars:
    randomkey1: "{{ lookup('password', '/dev/null length=15 chars=ascii_letters,digits') | b64encode }}"
    randomkey2: "{{ lookup('password', '/dev/null length=15 chars=ascii_letters,digits') | b64encode }}"
    randomkey3: "{{ lookup('password', '/dev/null length=15 chars=ascii_letters,digits') | b64encode }}"
  copy:
    dest: "{{ ansible_env.HOME }}/powerdns.yml"
    content: |
      ---
      apiVersion: v1
      kind: Namespace
      metadata:
        name: external-dns
      ---
      apiVersion: v1
      kind: Secret
      metadata:
        name: s-external-dns
        namespace: external-dns
      type: Opaque
      data:
        PDNS_APIKEY: {{ randomkey1 }}
        PDNSADMIN_SECRET: {{ randomkey2 }}
        MYSQL_PASS: {{ randomkey3 }}
      ---
      apiVersion: extensions/v1beta1
      kind: Deployment
      metadata:
        name: powerdns
        namespace: external-dns
      spec:
        strategy:
          type: Recreate
        template:
          metadata:
            labels:
              app: powerdns
          spec:
            containers:
            - name: powerdns
              image: pschiffe/pdns-mysql:alpine
              lifecycle:
                postStart:
                  exec:
                    command: ["/bin/sh", "-c", "sleep 20 ; pdnsutil create-zone {{ domain }}"]
              env:
              - name: PDNS_api_key
                valueFrom:
                  secretKeyRef:
                    name: s-external-dns
                    key: PDNS_APIKEY
              - name: PDNS_master
                value: "yes"
              - name: PDNS_api
                value: "yes"
              - name: PDNS_webserver
                value: "yes"
              - name: PDNS_webserver_address
                value: "0.0.0.0"
              - name: PDNS_webserver_allow_from
                value: "0.0.0.0/0"
              - name: PDNS_webserver_password
                valueFrom:
                  secretKeyRef:
                    name: s-external-dns
                    key: PDNS_APIKEY
              - name: PDNS_version_string
                value: "anonymous"
              - name: PDNS_default_ttl
                value: "1500"
              - name: PDNS_soa_minimum_ttl
                value: "1200"
              - name: PDNS_default_soa_name
                value: "ns1.{{ domain }}"
              - name: PDNS_default_soa_mail
                value: "hostmaster.{{ domain }}"
              - name: MYSQL_ENV_MYSQL_HOST
                value: "127.0.0.1"
              - name: MYSQL_ENV_MYSQL_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: s-external-dns
                    key: MYSQL_PASS
              - name: MYSQL_ENV_MYSQL_DATABASE
                value: "powerdns"
              - name: MYSQL_ENV_MYSQL_USER
                value: "powerdns"
              - name: MYSQL_ENV_MYSQL_ROOT_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: s-external-dns
                    key: MYSQL_PASS
              ports:
              - containerPort: 53
                name: dns
                protocol: UDP
              - containerPort: 8081
                name: powerdns-api
                protocol: TCP
            - name: powerdns-admin
              image: aescanero/powerdns-admin
              env:
              - name: PDNS_API_KEY
                valueFrom:
                  secretKeyRef:
                    name: s-external-dns
                    key: PDNS_APIKEY
              - name: PDNSADMIN_SECRET_KEY
                valueFrom:
                  secretKeyRef:
                    name: s-external-dns
                    key: PDNSADMIN_SECRET
              - name: PDNS_PROTO
                value: "http"
              - name: PDNS_HOST
                value: "127.0.0.1"
              - name: PDNS_PORT
                value: "8081"
              - name: PDNSADMIN_SQLA_DB_HOST
                value: "127.0.0.1"
              - name: PDNSADMIN_SQLA_DB_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: s-external-dns
                    key: MYSQL_PASS
              - name: PDNSADMIN_SQLA_DB_NAME
                value: "powerdns"
              - name: PDNSADMIN_SQLA_DB_USER
                value: "powerdns"
              ports:
              - containerPort: 9191
                name: pdns-admin-http
                protocol: TCP
            - name: mysql
              image: yobasystems/alpine-mariadb
              env:
              - name: MYSQL_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: s-external-dns
                    key: MYSQL_PASS
              - name: MYSQL_DATABASE
                value: "powerdns"
              - name: MYSQL_USER
                value: "powerdns"
              - name: MYSQL_ROOT_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: s-external-dns
                    key: MYSQL_PASS
      ---
      apiVersion: v1
      kind: Service
      metadata:
        name: published-dns
        namespace: external-dns
      spec:
        ports:
        - name: dns
          port: 53
          protocol: UDP
          targetPort: dns
        selector:
          app: powerdns
        type: LoadBalancer
      ---
      apiVersion: v1
      kind: Service
      metadata:
        name: powerdns-api
        namespace: external-dns
      spec:
        ports:
        - name: powerdns-api
          port: 8081
          protocol: TCP
          targetPort: powerdns-api
        selector:
          app: powerdns
        type: ClusterIP
      ---
      apiVersion: v1
      kind: Service
      metadata:
        name: powerdns-admin
        namespace: external-dns
      spec:
        ports:
        - name: pdns-admin-http
          port: 80
          protocol: TCP
          targetPort: pdns-admin-http
        selector:
          app: powerdns
        type: ClusterIP

- name: Install External-DNS with PowerDNS
  run_once: true
  shell: kubectl apply -f {{ ansible_env.HOME }}/powerdns.yml

- name: Modify external LoadBalacer
  when: addons_item.publish is defined and "external" in addons_item.publish
  include_role:
    name: services
    tasks_from: external
  vars:
    service: powerdns
    externalport: 80
    internalport: "pdns-admin-http"
    protocol: "TCP"
    namespace: "external-dns"
    label: "app"

- name: Modify ingress route
  when: addons_item.publish is defined and "route" in addons_item.publish
  include_role:
    name: ingress
    tasks_from: ingress_add_route
  vars:
    service: powerdns-admin
    route: "/"
    internalport: 80
    namespace: "external-dns"

- name: Install external-dns helm with klipper-helm
  run_once: true
  copy:
    dest: "{{ ansible_env.HOME }}/external-dns.yml"
    content: |
      ---
      apiVersion: batch/v1
      kind: Job
      metadata:
        name: helm-install-external-dns
        namespace: kube-system
      spec:
        backoffLimit: 1000
        completions: 1
        parallelism: 1
        template:
          metadata:
            labels:
              jobname: helm-install-external-dns
          spec:
            containers:
            - args:
              - install
              - --namespace
              - external-dns
              - --name
              - external-dns
              - --set-string
              - provider=pdns
              - --set-string
              - pdns.apiUrl=http://powerdns-api.external-dns.svc.{{ domain }}
              - --set-string
              - pdns.apiPort=8081
              - --set-string
              - pdns.apiKey=$(pdns_apikey)
              - --set-string
              - txtOwnerId=external-dns
              - --set-string
              - domainFilters[0]={{ domain }}
              - --set-string
              - logLevel=info
              - --set-string
              - interval=10s
              - --set-string
              - rbac.create=true
              - stable/external-dns
              env:
              - name: NAME
                value: external-dns
              - name: pdns_apikey
                valueFrom:
                  secretKeyRef:
                    name: s-external-dns
                    key: PDNS_APIKEY
              image: rancher/klipper-helm:v0.1.5
              name: helm
            serviceAccount: helm-install-sa
            serviceAccountName: helm-install-sa
            restartPolicy: OnFailure

- name: Install External-DNS with PowerDNS
  run_once: true
  shell: "{{ item }}"
  with_items:
    - kubectl -n external-dns get secret s-external-dns -o yaml|grep -v namespace|kubectl -n kube-system apply -f -
    - kubectl apply -f {{ ansible_env.HOME }}/external-dns.yml

- name: Wait to raise external-dns
  shell: kubectl get pods -n external-dns |grep ^external-dns|grep Running
  register: test
  retries: 25
  delay: 10
  until: test.stdout != ""

- name: Obtain dashboard IP
  shell: kubectl get service -n external-dns published-dns -o jsonpath='{.status.loadBalancer.ingress[].ip}'
  register: externaldns_ip

- name: Make sure old dns conf is not in the resolv.conf configuration
  delegate_to: localhost
  lineinfile:
    path: /etc/resolv.conf
    state: absent
    regexp: '#Added by Ansible External-dns role'

- name: Add a line to resolv.conf
  delegate_to: localhost
  lineinfile:
    path: /etc/resolv.conf
    insertbefore: BOF
    line: 'nameserver {{ externaldns_ip.stdout }} #Added by Ansible External-dns role'
...
