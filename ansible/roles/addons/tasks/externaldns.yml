---
- name: Define PowerDNS
  vars:
    randomkey1: "{{ ansible_date_time.iso8601_micro | random | to_uuid }}"
    randomkey2: "{{ ansible_date_time.iso8601_micro | random | to_uuid }}"
    randomkey3: "{{ ansible_date_time.iso8601_micro | random | to_uuid }}"
  copy:
    dest: "{{ ansible_env.HOME }}/powerdns.yml"
    content: "{{ lookup('template', 'powerdns.j2') }}"

- name: Install External-DNS with PowerDNS
  shell: "kubectl apply -f {{ ansible_env.HOME }}/powerdns.yml"

- name: create storage
  when: addons_item.storage is defined and addons_item.storage == "nfs"
  include_role:
    name: storage
    tasks_from: pvc
  vars:
    service: powerdns
    namespace: "external-dns"

- name: Modify external LoadBalacer
  when: addons_item.publish is defined and "external" in addons_item.publish
  include_role:
    name: services
    tasks_from: external
  vars:
    service: powerdns
    externalport: 80
    internalport: "pdns-admin-http"
    protocol: "TCP"
    namespace: "external-dns"
    label: "app"

- name: Modify ingress route
  when: addons_item.publish is defined and "route" in addons_item.publish
  include_role:
    name: ingress
    tasks_from: ingress_add_route
  vars:
    service: powerdns-admin
    route: "/"
    internalport: 80
    namespace: "external-dns"

- name: Install external-dns helm with klipper-helm
  copy:
    dest: "{{ ansible_env.HOME }}/external-dns.yml"
    content: |
      ---
      apiVersion: batch/v1
      kind: Job
      metadata:
        name: helm-install-external-dns
        namespace: kube-system
      spec:
        backoffLimit: 1000
        completions: 1
        parallelism: 1
        template:
          metadata:
            labels:
              jobname: helm-install-external-dns
          spec:
            containers:
            - args:
              - install
              - --namespace
              - external-dns
              - --name
              - external-dns
              - --set-string
              - provider=pdns
              - --set-string
              - pdns.apiUrl=http://powerdns-api.external-dns.svc.{{ domain }}
              - --set-string
              - pdns.apiPort=8081
              - --set-string
              - pdns.apiKey=$(pdns_apikey)
              - --set-string
              - txtOwnerId=external-dns
              - --set-string
              - domainFilters[0]={{ domain }}
              - --set-string
              - logLevel=info
              - --set-string
              - interval=10s
              - --set-string
              - rbac.create=true
              - stable/external-dns
              env:
              - name: NAME
                value: external-dns
              - name: pdns_apikey
                valueFrom:
                  secretKeyRef:
                    name: s-external-dns
                    key: PDNS_APIKEY
              image: rancher/klipper-helm:v0.1.5
              name: helm
            serviceAccount: helm-install-sa
            serviceAccountName: helm-install-sa
            restartPolicy: OnFailure

- name: Install External-DNS with PowerDNS
  shell: "{{ item }}"
  with_items:
    - kubectl -n external-dns get secret s-external-dns -o yaml|grep -v namespace|kubectl -n kube-system apply -f -
    - "kubectl apply -f {{ ansible_env.HOME }}/external-dns.yml"

- name: Wait to raise external-dns
  shell: kubectl get pods -n external-dns |grep ^external-dns|grep Running
  register: test
  retries: 25
  delay: 10
  until: test.stdout != ""

- name: Obtain dashboard IP
  shell: kubectl get service -n external-dns published-dns -o jsonpath='{.status.loadBalancer.ingress[].ip}'
  register: externaldns_ip

- name: Make sure old dns conf is not in the resolv.conf configuration
  delegate_to: localhost
  lineinfile:
    path: /etc/resolv.conf
    state: absent
    regexp: '#Added by Ansible External-dns role'

- name: Add a line to resolv.conf
  delegate_to: localhost
  lineinfile:
    path: /etc/resolv.conf
    insertbefore: BOF
    line: 'nameserver {{ externaldns_ip.stdout }} #Added by Ansible External-dns role'
...
