---
- name: Create namespace
  shell: kubectl create namespace kubernator --dry-run -o yaml | kubectl apply -f -

- name: Create kubernator sa
  shell: "{{ item }}"
  with_items:
    - kubectl create serviceaccount kubernator-sa --dry-run -o yaml | kubectl apply -f -
    - kubectl create clusterrolebinding kubernator-sa --clusterrole=cluster-admin --serviceaccount=default:kubernator-sa --dry-run -o yaml | kubectl apply -f -

- name: Install kubernator
  copy:
    dest: "{{ ansible_env.HOME }}/kubernator.yml"
    content: |
      ---
      apiVersion: v1
      kind: Service
      metadata:
        name: kubernator
        namespace: kubernator
      spec:
        ports:
        - name: http
          port: 80
          protocol: TCP
          targetPort: 80
        selector:
          app: kubernator
        type: ClusterIP
      ---
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        labels:
          app: kubernator
        name: kubernator
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: kubernator
        template:
          metadata:
            labels:
              app: kubernator
          spec:
            serviceAccountName: kubernator-sa
            containers:
            - image: smpio/kubernator
              name: kubernator
              ports:
              - containerPort: 80

- name: Configure Service
  shell: kubectl apply -n kubernator -f {{ ansible_env.HOME }}/kubernator.yml

- name: Wait to raise kubernator
  shell: kubectl get pods -n kubernator |grep kubernator|grep Running
  register: test
  retries: 25
  delay: 10
  until: test.stdout != ""

- name: Modify external LoadBalacer
  when: addons_item.publish is defined and addons_item.publish['external'] is defined
  include_role:
    name: services
    tasks_from: external
  vars:
    service: kubernator
    externalport: 80
    internalport: 80
    protocol: "TCP"
    namespace: "kubernator"
    label: "app"

- name: Modify ingress route
  when: addons_item.publish is defined and addons_item.publish['route'] is defined
  include_role:
    name: ingress
    tasks_from: ingress_add_route
  vars:
    service: kubernator
    route: "/"
    internalport: 80
    namespace: "kubernator"
...
