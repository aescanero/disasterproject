---
- name: install Traefik
  when: container_engine != "k3s" or network_controller is defined
  copy:
    dest: "{{ ansible_env.HOME }}/traefik.yml"
    content: |
      ---
      apiVersion: batch/v1
      kind: Job
      metadata:
        name: helm-install-traefik
        namespace: kube-system
      spec:
        backoffLimit: 1000
        completions: 1
        parallelism: 1
        template:
          metadata:
            labels:
              jobname: helm-install-traefik
          spec:
            containers:
            - args:
              - install
              - --namespace
              - kube-system
              - --name
              - traefik
              - --set-string
              - dashboard.enabled=true
              - --set-string
              - rbac.enabled=true
              - --set-string
              - ssl.enabled=true
              - --set-string
              - ssl.mtls.enabled=true
              - --set-string
              - ssl.mtls.optional=true
              - --set-string
              - metrics.prometheus.enabled=true
              - --set-string
              - ssl.generateTLS=true
              - --set-string
              - dashboard.auth.basic.test='$apr1$H6uskkkW$IgXLP6ewTrSuBkTrqE8wj/'
              - stable/traefik
              image: rancher/klipper-helm:v0.1.5
              name: helm
            serviceAccount: helm-install-sa
            serviceAccountName: helm-install-sa
            restartPolicy: OnFailure

- name: install Traefik
  when: container_engine != "k3s" or network_controller is defined
  shell: "kubectl apply -f {{ ansible_env.HOME }}/traefik.yml"

- name: Wait to raise Traefik
  shell: kubectl get pods -n kube-system |grep traefik|grep -v helm|grep Running
  register: traefik_state
  retries: 25
  delay: 10
  until: traefik_state.stdout != ""

- name: Define a patch for traefik configmap
  when: container_engine != "k3s" or network_controller is defined
  copy:
    dest: "{{ ansible_env.HOME }}/traefik.cm.patch.yml"
    content: |
      data:
        traefik.toml: |
          # traefik.toml
          logLevel = "info"
          defaultEntryPoints = ["http","https","traefik"]
          [entryPoints]
            [entryPoints.http]
            address = ":80"
            compress = true
            [entryPoints.https]
            address = ":443"
            compress = true
              [entryPoints.https.tls]
                [entryPoints.https.tls.ClientCA]
                files = []
                optional = true
                [[entryPoints.https.tls.certificates]]
                CertFile = "/ssl/tls.crt"
                KeyFile = "/ssl/tls.key"
            [entryPoints.traefik]
              address = ":8080"
              [entryPoints.traefik.auth.basic]
              users = ["admin:$apr1$zjjGWKW4$W2JIcu4m26WzOzzESDF0W/"]
          [ping]
          entryPoint = "http"
          [kubernetes]
            [kubernetes.ingressEndpoint]
            publishedService = "kube-system/traefik"
          [traefikLog]
            format = "json"
          [api]
            entryPoint = "traefik"
            dashboard = true
          [metrics]
            [metrics.prometheus]
              entryPoint = "traefik"


- name: Define a patch for traefik configmap
  when: container_engine == "k3s" and network_controller is not defined
  copy:
    dest: "{{ ansible_env.HOME }}/traefik.cm.patch.yml"
    content: |
      data:
        traefik.toml: |
          # traefik.toml
          logLevel = "INFO"
          defaultEntryPoints = ["http","https","traefik"]
          [entryPoints]
            [entryPoints.http]
            address = ":80"
            compress = true
            [entryPoints.https]
            address = ":443"
            compress = true
              [entryPoints.https.tls]
                [[entryPoints.https.tls.certificates]]
                CertFile = "/ssl/tls.crt"
                KeyFile = "/ssl/tls.key"
            [entryPoints.traefik]
              address = ":8080"
              [entryPoints.traefik.auth.basic]
              users = ["admin:$apr1$zjjGWKW4$W2JIcu4m26WzOzzESDF0W/"]
          [kubernetes]
            [kubernetes.ingressEndpoint]
            publishedService = "kube-system/traefik"
          [traefikLog]
            format = "json"
          [api]
          entryPoint = "traefik"
            dashboard = true
          [metrics]
            [metrics.prometheus]
              entryPoint = "traefik"

- name: Define a patch for traefik deployment
  copy:
    dest: "{{ ansible_env.HOME }}/traefik.deploy.patch.yml"
    content: |
      spec:
        template:
          spec:
            containers:
            - args:
              - --configfile=/config/traefik.toml
              image: traefik:1.7.9
              name: traefik
              ports:
              - containerPort: 8080
                name: dashboard
                protocol: TCP

- name: Define a patch for traefik service
  when: container_engine == "k3s" and network_controller is not defined
  copy:
    dest: "{{ ansible_env.HOME }}/traefik.svc.patch.yml"
    content: |
      spec:
        ports:
        - name: dashboard
          port: 8080
          protocol: TCP
          targetPort: dashboard

- name: Configure traefik deployment
  when: container_engine == "k3s" and network_controller is not defined
  shell: kubectl patch deployment -n kube-system traefik -p "$(cat {{ ansible_env.HOME }}/traefik.deploy.patch.yml)"

- name: Configure traefik configmap
  when: container_engine == "k3s" and network_controller is not defined
  shell: kubectl patch configmap -n kube-system traefik -p "$(cat {{ ansible_env.HOME }}/traefik.cm.patch.yml)"

- name: Configure traefik service
  when: container_engine == "k3s" and network_controller is not defined
  shell: kubectl patch service -n kube-system traefik -p "$(cat {{ ansible_env.HOME }}/traefik.svc.patch.yml)"

- include: traefik_add_route.yml
  vars:
    service: traefik
    route: "/"
    internalport: 8080
    namespace: kube-system
...
