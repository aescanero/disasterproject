---
- run_once: true
  delegate_to: localhost
  connection: local
  block:
  - copy: content={{ lookup('template', '/home/aescanero/testbed/ansible/roles/kubespray/templates/hosts.j2') }} dest="./files/hosts.ini"
  - import_role:
      name: aws
      tasks_from: keypair
    vars:
      key_name: "groups.aws.launcher"
  - name: Load pem
    slurp: src='./files/{{ domain.split(".")[0] }}.groups.aws.key.ppk'
    register: sshkey
  - name: Load hostsfile
    slurp: src='./files/hosts.ini'
    register: hostsfile
  - name: Cerate EC2 launcher
    import_role:
      name: aws
      tasks_from: ec2
    vars:
      ec2_instance_type: "t2.micro"
      ec2_ami_id: "{{ ami_id }}"
      ec2_security_group_id: "{{ default_security_group_id }}"
      subnet_name: "Bastion Subnet"
      ec2_keypair_key_name: "{{ keypair.key.name }}"
      ec2_name: "launcher"
      ec2_userdata: "{{ lookup('template', 'userdata.j2') }}"
      ec2_ip: '{{ network.split(".")[0] }}.{{ network.split(".")[1] }}.0.254'
  - set_fact:
      bastion_ip: "{{ ec2_info.instances[0].public_ip_address }}"

- run_once: true
  delegate_to: "{{ bastion_ip }}"
  vars:
    ansible_host: "{{ bastion_ip }}"
    warn: false
    ansible_ssh_extra_args: '-o StrictHostKeyChecking=no'
    ansible_ssh_user: "ubuntu"
    ansible_ssh_private_key_file: "./files/disasterproject.groups.aws.launcher.key.ppk"
  block:
  - name: Wait for start to complete
    wait_for_connection:
      connect_timeout: 60
      sleep: 5
      delay: 20
      timeout: 600
  - name: Obtain vm information
    setup:
  - shell: "cd /opt/kubespray && ansible-playbook -b -u ubuntu -e cloud_provider=aws -i hosts.ini cluster.yml --private-key=key.pem --flush-cache"

...