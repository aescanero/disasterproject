---
- name: Obtain host information
  setup:
  vars:
    warn: no
  run_once: true

- sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    sysctl_set: yes
    state: present
  run_once: true

- name: Update repositories cache and install libvirt
  apt:
    name: "{{ packages }}"
    update_cache: yes
  vars:
    packages:
    - libvirt-daemon-system
    - python-libvirt
    - python-lxml
  when: ansible_os_family == "Debian"
  run_once: true

- name: Update repositories cache and install libvirt
  yum:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
    - libvirt-daemon-kvm
    - python-lxml
  when: ansible_os_family == "Redhat"
  run_once: true

- name: enable and start libvirtd service
  systemd:
    name: libvirtd
    daemon_reload: yes
    enabled: yes
    masked: no
    state: started
  run_once: true

- name: Ansible check if vm image exists.
  stat:
    path: /var/lib/libvirt/images/"{{ inventory_hostname }}".qcow2
  register: vm_file_details

- name: Unarchive the image
  command: tar -zxf ~/.images/{{linux_flavor}}.box.tgz --exclude='./Vagrantfile' --exclude='./metadata.json' -C /var/lib/libvirt/images/
  when: vm_file_details.stat.exists == false

- name: create image
  copy:
    src: /var/lib/libvirt/images/box.img
    dest: /var/lib/libvirt/images/{{ inventory_hostname }}.qcow2
    group: "libvirt"
    mode: '0666'
  when: vm_file_details.stat.exists == false
  notify: clean box

- name: image chgrp
  file:
   path: /var/lib/libvirt/images
   group: "libvirt"

- name: create_vm
  virt:
    command: define
    name: "{{ inventory_hostname }}"
    uri: "{{ libvirt_uri }}"
    xml: "{{ lookup('template', 'vm.xml.j2') }}"

- name: getMAC
  shell: virsh domiflist --domain "{{ inventory_hostname }}" | grep "{{ network_name }}" | awk '{print $5}'
  register: mac

- virt_net:
    name: '{{ network_name }}'
    command: modify
    xml: "<host mac='{{mac.stdout}}' name='{{ inventory_hostname }}.{{ network_name }}.local' ip='{{ vm_ip }}'/>"

- name: start_vm
  virt:
    command: start
    name: "{{ inventory_hostname }}"
    uri: "{{ libvirt_uri }}"

- pause:
    seconds: 20
...
