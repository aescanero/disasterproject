---
- name: Ansible check if vm image exists.
  stat:
    path: /var/lib/libvirt/images/"{{ inventory_hostname }}".qcow2
  register: vm_file_details

- name: Unarchive the image
  command: tar -zxf ~/.images/{{linux_flavor}}.box.tgz --exclude='./Vagrantfile' --exclude='./metadata.json' -C /var/lib/libvirt/images/
  when: vm_file_details.stat.exists == false

- name: rename image
  command: mv /var/lib/libvirt/images/box.img /var/lib/libvirt/images/{{ inventory_hostname }}.qcow2
  when: vm_file_details.stat.exists == false

- name: image chgrp
  file:
   path: /var/lib/libvirt/images
   group: "libvirt"

- name: image chgrp
  file:
   path: /var/lib/libvirt/images/{{ inventory_hostname }}.qcow2
   group: "libvirt"
   mode: '0666'

- name: create_vm
  virt:
    command: define
    name: "{{ inventory_hostname }}"
    uri: "{{ libvirt_uri }}"
    xml: "{{ lookup('template', 'vm.xml.j2') }}"

- name: getMAC
  shell: virsh domiflist --domain "{{ inventory_hostname }}" | grep "{{ network_name }}" | awk '{print $5}'
  register: mac

- virt_net:
    name: '{{ network_name }}'
    command: modify
    xml: "<host mac='{{mac.stdout}}' name='{{ inventory_hostname }}' ip='{{ vm_ip }}'/>"

- name: start_vm
  virt:
    command: start
    name: "{{ inventory_hostname }}"
    uri: "{{ libvirt_uri }}"

- pause:
    seconds: 20
...
