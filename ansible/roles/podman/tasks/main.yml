---
- name: Update repositories cache and install dirmngr and curl packages
  apt:
    name: "{{ packages }}"
    update_cache: yes
    force_apt_get: True
  vars:
    packages:
    - ebtables
    - ethtool 
    - software-properties-common
    - dirmngr
    - curl
    - socat
    - libseccomp2
  when: ansible_os_family == "Debian"

- name: Creates directory cni
  file:
    path: /opt/cni/bin
    state: directory

- name: Ansible check if CNI was installed
  stat:
    path: /opt/cni/bin/flannel
  register: cni_details


- name: Install last CNI version
  shell: curl -LSs https://github.com/containernetworking/plugins/releases/download/v0.8.1/cni-plugins-linux-amd64-v0.8.1.tgz |tar --no-overwrite-dir -C /opt/cni/bin -xz
  when: cni_details.stat.exists == false
  args:
    warn: false

- name: install the latest version of podman and buildah
  yum:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
    - podman
    - buildah
  when: ( ansible_os_family == "Redhat" and ansible_distribution_major_version == "7") or ansible_distribution == "OracleLinux"

- name: install the latest version of container-tools
  yum:
    name: container-tools
    state: latest
  when: ansible_distribution == "RedHat" and ansible_distribution_major_version == "8"

- name: Add podman key repository
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: 8BECF1637AD8C79D
  when: ansible_os_family == "Debian"

- name: Add podman repository
  apt_repository:
    repo: deb http://ppa.launchpad.net/projectatomic/ppa/ubuntu bionic main 
    state: present
    validate_certs: no
  when: ansible_os_family == "Debian"

- name: Update repositories cache and install podman package
  apt:
    name: "{{ packages }}"
    update_cache: yes
    force_apt_get: True
  vars:
    packages:
    - podman
    - buildah
  when: ansible_os_family == "Debian"

- name: Registry configuration
  copy:
    dest: /etc/containers/registries.conf
    content: |
      [registries.search]
      registries = ["docker.io"]
      
      # Registries that do not use TLS when pulling images or uses self-signed
      # certificates.
      [registries.insecure]
      registries = []
      
      [registries.block]
      registries = []

- name: CNI configuration
  copy:
    dest: /etc/cni/net.d/87-podman-bridge.conflist
    content: |
      {
        "cniVersion": "0.3.0",
        "name": "podman",
        "plugins": [
          {
            "type": "bridge",
            "bridge": "cni0",
            "isGateway": true,
            "ipMasq": true,
            "ipam": {
              "type": "host-local",
              "subnet": "10.88.0.0/16",
              "routes": [
                { "dst": "0.0.0.0/0" }
              ]
            }
          },
          {
            "type": "portmap",
            "capabilities": {
              "portMappings": true
            }
          }
        ]
      }

...